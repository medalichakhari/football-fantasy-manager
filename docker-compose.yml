version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: football-fantasy-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: football_fantasy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - football-fantasy-network

  redis:
    image: redis:7-alpine
    container_name: football-fantasy-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - football-fantasy-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: football-fantasy-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/football_fantasy
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      SENDGRID_API_KEY: your-sendgrid-api-key
      FROM_EMAIL: noreply@footballfantasy.com
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - football-fantasy-network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: football-fantasy-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:3001/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - football-fantasy-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  football-fantasy-network:
    driver: bridge
